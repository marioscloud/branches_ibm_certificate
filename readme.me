Git Workflows with Git Commands

This repository is part of the hands-on exercise for the course "Git Workflows with Git Commands" within the **IBM DevOps and Software Engineering Professional Certificate program**.
Hands-on Lab: Getting Started with Branches using Git Commands

Estimated time needed: 25 minutes

**Objectives**

After completing this lab, you will be able to use Git commands to work with branches on a local repository, including:

    Create a new local repository using git init

    Create and add a file to the repository using git add

    Commit changes using git commit

    Create a branch using git branch

    Switch to a branch using git checkout

    Check the status of files changed using git status

    Review recent commits using git log

    Revert changes using git revert

    Get a list of branches and active branches using git branch

    Merge changes in your active branch into another branch using git merge

**Prerequisites**

This lab is designed to be run on the Skills Network Cloud IDE, which runs on a Linux system in the cloud and already has Git installed. If you intend to run this lab on your own system, please ensure you have the following:

Git (on Linux or macOS).
Valid credentials for your GitHub account.
A stable internet connection.
A supported browser.

If you encounter any issues, please consider clearing your cache/cookies and retrying.

**Getting Started**

Step 1: Clone the Repository

To start working with the repository, clone it to your local machine using the following command:

git clone 

Step 2: Navigate to the Repository Directory

Change to the repository directory:

cd your-repository

Step 3: Explore the Code

Open the repository in your preferred code editor and explore the provided files and directories.
Step 4: Follow the Tutorial

Refer to the docs/tutorial.md file for a step-by-step guide on completing the exercises.

**Contributing**

If you'd like to contribute to this project, please follow these guidelines:

    Fork the repository.

    Create a new branch (git checkout -b feature-branch).

    Make your changes and commit them (git commit -m "Add new feature").

    Push to the branch (git push origin feature-branch).

    Open a Pull Request.

**License**

This project is licensed under the MIT License - see the LICENSE file for details.
